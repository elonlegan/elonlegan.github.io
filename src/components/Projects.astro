---
import GitHub from './icons/GitHub.astro';
import NextJS from './icons/NextJS.astro';
import Tailwind from './icons/Tailwind.astro';
import Figma from './icons/Figma.astro';
import Angular from './icons/Angular.astro';
import Ionic from './icons/Ionic.astro';
import Link from './icons/Link.astro';
import LinkButton from './LinkButton.astro';

const TAGS = {
	NEXT: {
		name: 'Next.js',
		class: 'bg-black text-white',
		icon: NextJS,
	},
	TAILWIND: {
		name: 'Tailwind CSS',
		class: 'bg-[#003159] text-white',
		icon: Tailwind,
	},
	FIGMA: {
		name: 'Figma',
		class: 'bg-[#f7f7f7] text-black',
		icon: Figma,
	},
	ANGULAR: {
		name: 'Angular',
		class: 'bg-[#7e011e] text-white',
		icon: Angular,
	},
	IONIC: {
		name: 'Ionic',
		class: 'bg-[#012665] text-white',
		icon: Ionic,
	},
};
const PROJECTS = [
	{
		title: 'Memento Mori — life in weeks',
		description: `Personal project to visualize life in weeks and reflect on time. Built responsive UI and reminder flows to encourage mindful planning.`,
		link: 'https://memento-mori-lilac.vercel.app',
		github: 'https://github.com/elonlegan/memento-mori',
		image: '/projects/memento-mori.webp',
		tags: [TAGS.IONIC, TAGS.ANGULAR, TAGS.FIGMA],
	},
	{
		title: 'IALingo — AI conversation practice',
		description:
			'English practice app. Enter a context (e.g., interview, meeting) and get tailored dialogues with LLMs. I built the UI and flows to iterate prompts and review vocab.',
		link: 'https://ialingo.vercel.app/',
		github: 'https://github.com/elonlegan/ialingo',
		image: '/projects/ialingo.webp',
		tags: [TAGS.NEXT, TAGS.TAILWIND],
	},
	{
		title: 'reporter.ia — news summaries with LLMs',
		description:
			'Web app that summarizes news using LLMs so users can scan key events quickly. I focused on the UX for feeds, summary detail, and shareable links.',
		link: 'https://reporter-ia.vercel.app/',
		github: 'https://github.com/elonlegan/reporter.ia',
		image: '/projects/reporter-ia.webp',
		tags: [TAGS.NEXT, TAGS.TAILWIND],
	},
];
---

<div class='flex flex-col gap-y-16'>
	{
		PROJECTS.map(
			({
				image,
				title,
				description,
				tags,
				link,
				github,
			}) => (
				<article class='flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0'>
					<div class='w-full md:w-1/2'>
						<figure class='relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:hover:border-gray-700 lg:hover:bg-gray-800/50'>
							<img
								alt={title}
								class='object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105'
								loading='lazy'
								src={image}
							/>
						</figure>
					</div>

					<div class='w-full md:w-1/2 md:max-w-lg'>
						<h3 class='text-2xl font-bold text-gray-100'>
							{title}
						</h3>
						<div class='flex flex-wrap mt-2'>
							<ul
								class='flex flex-row mb-2 gap-x-2'
								aria-label='Tecnologías usadas'
							>
								{tags.map((tag) => (
									<li>
										<span
											class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
										>
											<tag.icon class='size-4' />
											{tag.name}
										</span>
									</li>
								))}
							</ul>

							<div class='mt-2 text-gray-400'>
								{description}
							</div>
							<footer class='flex items-end justify-start mt-4 gap-x-4'>
								{github && (
									<LinkButton href={github}>
										<GitHub class='size-6' />
										Code
									</LinkButton>
								)}
								{link && (
									<LinkButton href={link}>
										<Link class='size-4' />
										Preview
									</LinkButton>
								)}
							</footer>
						</div>
					</div>
				</article>
			)
		)
	}
</div>
